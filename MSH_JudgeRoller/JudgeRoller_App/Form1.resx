<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>